basePath: /api/
definitions:
  charts_analyser_internal_app_domain.Track:
    properties:
      id:
        type: integer
      location:
        items:
          type: number
        type: array
      name:
        type: string
      timestamp:
        type: string
    type: object
  domain.CurrentZone:
    properties:
      timeIn:
        type: string
      zones:
        items:
          type: string
        type: array
    type: object
  domain.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
  domain.InputVesselsInterval:
    properties:
      finish:
        type: string
      start:
        type: string
      vesselIDs:
        items:
          type: integer
        type: array
    type: object
  domain.InputZones:
    properties:
      finish:
        type: string
      start:
        type: string
      zoneNames:
        items:
          type: string
        type: array
    type: object
  domain.Vessel:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  domain.VesselState:
    properties:
      control:
        type: boolean
      controlEnd:
        type: string
      controlStart:
        type: string
      currentZone:
        $ref: '#/definitions/domain.CurrentZone'
      id:
        type: integer
      location:
        items:
          type: number
        type: array
      name:
        type: string
      timestamp:
        type: string
      zoneDuration:
        $ref: '#/definitions/domain.Duration'
    type: object
host: localhost:3000
info:
  contact: {}
  title: 'Charts analyser: web-service API'
  version: "1.0"
paths:
  /chart/vessels:
    get:
      consumes:
      - application/json
      description: которые пересекали указанные морские карты в заданный временной
        промежуток.
      parameters:
      - description: 'Входные параметры: идентификаторы карт, стартовая дата, конечная
          дата.'
        in: body
        name: InputZones
        required: true
        schema:
          $ref: '#/definitions/domain.InputZones'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: список судов
      tags:
      - Chart
  /chart/zones:
    get:
      consumes:
      - application/json
      description: которые пересекались заданными в запросе судами в заданный временной
        промежуток.
      parameters:
      - description: 'Входные параметры: идентификаторы судов, стартовая дата, конечная
          дата.'
        in: body
        name: InputVesselsInterval
        required: true
        schema:
          $ref: '#/definitions/domain.InputVesselsInterval'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: список морских карт
      tags:
      - Chart
  /monitor:
    delete:
      consumes:
      - application/json
      parameters:
      - description: список ID Судов
        in: body
        name: VesselIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Снять судно с контроля
      tags:
      - Monitor
    get:
      consumes:
      - application/json
      description: поставленных на мониторинг
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/domain.Vessel'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Список судов
      tags:
      - Monitor
    post:
      consumes:
      - application/json
      parameters:
      - description: список ID Судов
        in: body
        name: VesselIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Поставить судно на контроль
      tags:
      - Monitor
  /monitor/state:
    get:
      consumes:
      - application/json
      description: для выбранных судов, стоящих на мониторинге
      parameters:
      - description: список ID Судов
        in: body
        name: VesselIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/domain.VesselState'
            type: array
        "400":
          description: Bad Request
        "404":
          description: no data yet
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Текущие данные
      tags:
      - Monitor
  /track:
    post:
      consumes:
      - application/json
      parameters:
      - description: 'Bearer: JWT claims must have: id key used as vesselID and role:
          1'
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[lon, lat]'
        in: body
        name: Point
        required: true
        schema:
          items:
            type: number
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Запись трека судна
      tags:
      - Track
  /track/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: 'ID Судна '
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: finish
        type: string
      - in: query
        name: start
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/charts_analyser_internal_app_domain.Track'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Маршрут судна за указанный период
      tags:
      - Track
  /vessels:
    delete:
      consumes:
      - application/json
      parameters:
      - description: список ID Судов
        in: body
        name: VesselNames
        required: true
        schema:
          items:
            items:
              type: integer
            type: array
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Удаление судна
      tags:
      - Vessel
    get:
      consumes:
      - application/json
      parameters:
      - description: список ID Судов
        in: body
        name: VesselNames
        required: true
        schema:
          items:
            items:
              type: integer
            type: array
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Vessel'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Добавление судна
      tags:
      - Vessel
    patch:
      consumes:
      - application/json
      parameters:
      - description: список ID Судов
        in: body
        name: VesselNames
        required: true
        schema:
          items:
            items:
              type: integer
            type: array
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Восстановление судна
      tags:
      - Vessel
    post:
      consumes:
      - application/json
      parameters:
      - description: список названий Судов
        in: body
        name: VesselNames
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/domain.Vessel'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Добавление судна
      tags:
      - Vessel
securityDefinitions:
  BearerAuth:
    description: Insert your access token default (Bearer access_token_here)
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
